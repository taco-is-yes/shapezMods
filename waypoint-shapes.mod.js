/*!
 * Name: Waypoint shapes
 * Description: Allow shapes and text in waypoints
 * Version: 1.0.0
 * Mod authored by emanresu
 */(()=>{"use strict";const t=JSON.parse('{"entry":"./index.ts","name":"Waypoint shapes","description":"Allow shapes and text in waypoints","version":"1.0.0","id":"dengr1065:waypoint-shapes","author":"emanresu","website":"https://www.youtube.com/watch?v=dQw4w9WgXcQ","doesNotAffectSavegame":true,"extra":{"authors":[{"name":"Даниїл Григор\'єв","icon":"https://avatars.githubusercontent.com/u/32245793?s=64","email":"dengr1065@gmail.com"}],"source":"https://github.com/dengr1065/shapez-mods/","updateURL":"https://skimnerphi.net/api/v1/manifest/waypoint-shapes"}}'),{makeOffscreenBuffer:e}=shapez,{removeAllChildren:i,makeDiv:s,lerp:a}=shapez,{HUDWaypoints:n}=shapez,{ShapeDefinition:o}=shapez,{Mod:r}=shapez,{Rectangle:l}=shapez,{Vector:h}=shapez;const c={};function p(t){if(c[t])return c[t];let e=!1,i=[],s="";for(let a of t)"{"!=a||e?"}"==a&&e?(i.push(s+"}"),s="",e=!1):s+=a:(i.push(s),e=!0,s="{");return s&&i.push(s),c[t]=i.filter((t=>t))}window.$shapez_registerMod(class extends r{init(){this.modInterface.extendClass(n,(({$old:t})=>({rerenderWaypointList(){i(this.waypointsListElement),this.cleanupClickDetectors();for(let t=0;t<this.waypoints.length;++t){const i=this.waypoints[t],a=this.getWaypointLabel(i),n=s(this.waypointsListElement,null,["waypoint","layer--"+i.layer]);if(o.isValidShortKey(a)){const s=this.getWaypointCanvas(i),[o,r]=e(48,48,{smooth:!0,label:a+"-waypoint-"+t});r.drawImage(s,0,0),n.appendChild(o),n.classList.add("shapeIcon")}else{let i=p(a),s=i.some((t=>"{"==t[0]&&"}"==t[t.length-1]&&o.isValidShortKey(t.slice(1,-1))));i.forEach((i=>{if("{"==i[0]&&o.isValidShortKey(i.slice(1,-1))&&"}"==i[i.length-1]){const s=this.getKeyCanvas(i.slice(1,-1)),[a,o]=e(48,48,{smooth:!0,label:i.slice(1,-1)+"-waypoint-"+t});o.drawImage(s,0,0),n.appendChild(a),n.classList.add("shapeIcon")}else{let t=document.createElement("span");s&&(t.style.display="inline-block",t.style.transform="translateY(-25%)",t.style.paddingLeft=t.style.paddingRight="2px"),t.innerText=i,n.appendChild(t)}})),n.style.display="inline"}if(this.isWaypointDeletable(i)){const t=s(n,null,["editButton"]);this.trackClicks(t,(()=>this.requestSaveMarker({waypoint:i}))),t.style.display="inline-block",t.style.float="right"}i.label||(n.classList.add("hub"),n.insertBefore(this.compassBuffer.canvas,n.childNodes[0])),this.trackClicks(n,(()=>this.moveToWaypoint(i)),{targetOnly:!0})}},getKeyCanvas(t){if(this.cachedKeyToCanvas[t])return this.cachedKeyToCanvas[t];if(!o.isValidShortKey(t))return null;const e=this.root.shapeDefinitionMgr.getShapeFromShortKey(t).generateAsCanvas(48);return this.cachedKeyToCanvas[t]=e},getPlainTextWidth(t){return this.dummyBuffer.font="bold "+this.getTextScale()+"px GameFont",this.dummyBuffer.measureText(t).width},getTextWidth(t){let e=0;const i=14*this.getWaypointUiScale();for(let s of p(t))"{"==s[0]&&"}"==s[s.length-1]&&o.isValidShortKey(s.slice(1,-1))?e+=i:e+=this.getPlainTextWidth(s);return e},getWaypointScreenParams(t){if(!this.root.camera.getIsMapOverlayActive())return null;const e=this.getWaypointUiScale(),i=this.root.camera.worldToScreen(new h(t.center.x,t.center.y)),s=this.getWaypointLabel(t);let a,n=this.getTextWidth(s);return o.isValidShortKey(s)?(a=[{item:s,width:14*e}],n=14*e):a=p(s).map((t=>"{"==t[0]&&"}"==t[t.length-1]&&o.isValidShortKey(t.slice(1,-1))?{item:t.slice(1,-1),width:14*e}:{text:t,width:this.getPlainTextWidth(t)})),{screenBounds:new l(i.x-7*e,i.y-12*e,15*e+n,15*e),parts:a}},drawOverlays(t){const e=this.root.app.mousePosition,i=this.root.camera.getIsMapOverlayActive()?1:0;if(this.currentMarkerOpacity=a(this.currentMarkerOpacity,i,.08),this.rerenderWaypointsCompass(),this.currentMarkerOpacity<.01)return;const s=this.getWaypointUiScale(),n=this.getTextScale();t.context.font="bold "+n+"px GameFont",t.context.textBaseline="middle";for(let i=0;i<this.waypoints.length;++i){const a=this.waypoints[i],n=this.getWaypointScreenParams(a);if(!n)continue;if(!t.visibleRect.containsRect(n.screenBounds))continue;const o=n.screenBounds;let r=7*s;const l=r,h=e&&o.containsPoint(e.x,e.y);t.context.globalAlpha=this.currentMarkerOpacity*(h?1:.7),t.context.fillStyle="rgba(255, 255, 255, 0.7)",t.context.beginRoundedRect(o.x,o.y,o.w,o.h,6),t.context.fill();for(let e of n.parts)if(e.item){const i=this.getKeyCanvas(e.item),a=14*s;t.context.drawImage(i,o.x+r+6*s,o.y+(.75*s|0),a,a),r+=a}else e.text?(t.context.fillStyle="#000",t.context.textBaseline="middle",t.context.fillText(e.text,o.x+r+6*s,o.y+o.h/2),t.context.textBaseline="alphabetic",r+=this.getPlainTextWidth(e.text)):console.error("Invalid part",e);this.waypointSprites[a.layer].drawCentered(t.context,o.x+l,o.y+o.h/2,.6*o.h)}t.context.textBaseline="alphabetic",t.context.globalAlpha=1}})))}},t)})();